<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{5B9F2FDE-8223-4211-899E-306FE25EAA5C}</ProjectGuid>
    <OutputType>Library</OutputType>
    <RootNamespace>Emul8.Disassembler.LLVM</RootNamespace>
    <AssemblyName>LLVMDisassembler</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <PropertiesLocation>$(SolutionDir)\properties.csproj</PropertiesLocation>
    <OutputPathPrefix>bin</OutputPathPrefix>
  </PropertyGroup>
  <Import Project="$(PropertiesLocation)" />
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <LangVersion>7</LangVersion>
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>$(OutputPathPrefix)\Debug</OutputPath>
    <!-- This is a hack to allow debugging in MonoDevelop -->
    <OutputPath Condition="'$(BuildingFromBuildScript)' == ''">bin\Debug</OutputPath>
    <DefineConstants>DEBUG;$(DefineConstants)</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <ConsolePause>false</ConsolePause>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <LangVersion>7</LangVersion>
    <DebugType>full</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>$(OutputPathPrefix)\Release</OutputPath>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <ConsolePause>false</ConsolePause>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="LLVMDisasWrapper.cs" />
    <Compile Include="LLVMDisassembler.cs" />
    <Compile Include="CortexMAddressTranslator.cs" />
  </ItemGroup>
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ItemGroup>
    <ProjectReference Include="..\Peripherals\Peripherals-TranslationCPU.csproj">
      <Project>{66400796-0C5B-4386-A859-50A2AC3F3DB5}</Project>
      <Name>Peripherals-TranslationCPU</Name>
    </ProjectReference>
    <ProjectReference Include="..\Main\Emulator.csproj">
      <Project>{2901AECB-A54F-4FD8-9AC1-033D86DC7257}</Project>
      <Name>Emulator</Name>
    </ProjectReference>
  </ItemGroup>
  <ProjectExtensions>
    <Emul8>
      <ProjectInfo Type="Extension"/>
    </Emul8>
  </ProjectExtensions>
  <ItemGroup>
    <None Include="Resources\32_libLLVM.dll" />
    <None Include="Resources\64_libLLVM.dll" />
    <None Include="Resources\32_libLLVM-3.4.so" />
    <None Include="Resources\64_libLLVM-3.4.so" />
    <None Include="Resources\32_libLLVM.dylib" />
  </ItemGroup>
  <UsingTask AssemblyFile="$(MSBuildProjectDirectory)/../../External/cctask/CCTask/bin/Release/CCTask.dll" TaskName="EnvironmentTask" />
  <Target Name="CopySharedLibraries" AfterTargets="Build">
    <EnvironmentTask Condition="$(HostWordSize) == ''">
      <Output TaskParameter="FrameworkPointerSize" PropertyName="HostWordSize" />
    </EnvironmentTask>
    <PropertyGroup>
        <Extension Condition=" '$(CurrentPlatform)' == 'Windows'">dll</Extension>
        <Extension Condition=" '$(CurrentPlatform)' == 'Linux'"  >so</Extension>
        <Extension Condition=" '$(CurrentPlatform)' == 'OSX'"    >dylib</Extension>
        <Suffix    Condition=" '$(CurrentPlatform)' == 'Linux'"  >-3.4</Suffix>
    </PropertyGroup>
    <Copy SourceFiles="Resources\$(HostWordSize)_libLLVM$(Suffix).$(Extension)" DestinationFiles="$(OutputPath)\libLLVM.$(Extension)" Condition="Exists('Resources\$(HostWordSize)_libLLVM$(Suffix).$(Extension)')" />
  </Target>
</Project>
